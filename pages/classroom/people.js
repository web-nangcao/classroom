import Head from "next/head";
import Image from "next/image";
import Grid from "@mui/material/Grid";
import Stack from "@mui/material/Stack";
import List from "@mui/material/List";
import ListItem from "@mui/material/ListItem";
import Divider from "@mui/material/Divider";

import Layout from "../../components/layout";

import TopBarClassDetail from "../../components/topBarClassDetail/topBarClassDetail";
import MenuBar from "../../components/menuBar/menubar";
import ClassRoom from "../../components/classroom/classroom";
import Lesson from "../../components/classroom/detail/lesson";
import Banner from "../../components/classroom/detail/bannerClassDetail";

import Person from "../../components/classroom/people/person";
import styles from "../../styles/util.module.css";

import peopleStyle from "../../styles/classroom.people.module.css";

import libClassroom from "../../lib/classroom";

import AddPeople from "../../components/classroom/people/addPeople";

import { useState, useEffect } from "react";
import Cookie from "js-cookie";
import axios from "axios";

const axiosApiCall = (url, method, headers = {}, data) =>
  axios({
    method,
    url: `http://localhost:3000/${url}`,
    data: data,
    headers: headers,
  });

export default function ClassRoomPage() {
  const [studentList, setStudentList] = useState([]);
  const [teacherList, setTeacherList] = useState([]);
  const [adminList, setAdminList] = useState([]);
  const [loadingPage, setLoadingPage] = useState(true);

  const handleAddPeolple = (newMember) => {
    console.log("handle add people");
    const access_token = "Bearer " + Cookie.get("accesstoken");
    const headers = { authorization: access_token };
    const classroomId = JSON.parse(Cookie.get("classDetail"))._id;
    const data = {
      classroomId: classroomId,
      inviteEmail: newMember.txtEmail,
      userType: newMember.txtUserType,
    };
    console.log(data);

    axiosApiCall("invite-gmail", "post", headers, data)
      .then((res) => {
        console.log("response:");
        console.log(res.data.resValue);
      })
      .catch(function (error) {
        console.log("khoogn thể mời");
        if (error.response) {
          console.log(error.response.data);
          console.log(error.response.status);
          console.log(error.response.headers);
        }
      });
  };

  useEffect(() => {
    const classDetail = JSON.parse(Cookie.get("classDetail"));
    const studentListTemp = [];
    const teacherListTemp = [];
    const adminListTemp = [];
    classDetail.members.map((member) => {
      if (member.userType === "Admin") {
        adminListTemp.push(member);
        teacherListTemp.push(member);
      } else if (member.userType === "Teacher") {
        teacherListTemp.push(member);
      } else {
        studentListTemp.push(member);
      }
    });

    setTeacherList(teacherListTemp);
    setAdminList(adminListTemp);
    setStudentList(studentListTemp);
    setLoadingPage(false);
  }, []);
  return (
    <div>
      {!loadingPage ? (
        <Layout>
          <>
            <Head>
              <title>People in class</title>
              <meta name="description" content="Generated by create next app" />
              <link rel="icon" href="/favicon.ico" />
            </Head>
            <TopBarClassDetail></TopBarClassDetail>
            <AddPeople handleAddPeolple={handleAddPeolple}></AddPeople>
            <div className={styles.classContentPeopleContainer}>
              <h3>Mời người khác tham gia lớp học:</h3>
              <Grid container spacing={2}>
                <Grid item xs={10}>
                  <h1 style={{ color: "#1967D3" }}>Quản lý</h1>
                </Grid>
                <Grid item xs={2}>
                  <p className={peopleStyle.number}>
                    {teacherList.length} Quản lý
                  </p>
                </Grid>
              </Grid>
              <List>
                {teacherList.map((teacher) => {
                  return (
                    <>
                      <ListItem>
                        <Person personName={teacher.email}></Person>
                      </ListItem>
                      <Divider />
                    </>
                  );
                })}
              </List>
              <Grid container spacing={2}>
                <Grid item xs={10}>
                  <h1 style={{ color: "#1967D3" }}>Giáo viên</h1>
                </Grid>
                <Grid item xs={2}>
                  <p className={peopleStyle.number}>
                    {teacherList.length} Giáo viên
                  </p>
                </Grid>
              </Grid>
              <List>
                {teacherList.map((teacher) => {
                  return (
                    <>
                      <ListItem>
                        <Person personName={teacher.email}></Person>
                      </ListItem>
                      <Divider />
                    </>
                  );
                })}
              </List>
              <Grid container spacing={2}>
                <Grid item xs={10}>
                  <h1 style={{ color: "#1967D3" }}>Học sinh</h1>
                </Grid>
                <Grid item xs={2}>
                  <p className={peopleStyle.number}>
                    {studentList.length} Học sinh
                  </p>
                </Grid>
              </Grid>
              <List>
                {studentList.map((student) => {
                  return (
                    <>
                      <ListItem>
                        <Person personName={student.personName}></Person>
                      </ListItem>
                      <Divider />
                    </>
                  );
                })}
              </List>
            </div>
          </>
        </Layout>
      ) : (
        <></>
      )}
    </div>
  );
}
